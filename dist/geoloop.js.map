{"version":3,"sources":["../src/geoloop.js"],"names":["moment","mapboxgl","d3","GeoLoop","ctrl","mapContainer","createMap","frames","currentFrameIndex","animation","console","log","mapCenterLonLat","parseFloat","panel","mapCenterLongitude","mapCenterLatitude","accessToken","mbApiKey","map","Map","container","style","mapStyle","center","zoom","initialZoom","interactive","userInteractionEnabled","legend","data","needToRedrawFrames","stopAnimation","clearFrames","createFrames","startAnimation","forEach","item","removeLayer","dataCharacteristics","timeValues","geo","isSourceLoaded","createFramesSafely","attemptsLeft","interval","setInterval","clearInterval","sizeIsDynamic","sizeRamp","codeTo","colorIsDynamic","colorRamp","featureType","renderType","layerType","opts","layerTypes","sizeStops","colorStops","minInput","maxInput","auto","min","max","minValue","maxValue","nStops","iStop","stop","push","colorInterpolator","time","frameName","pp","geoFilter","duration","property","type","stops","fixedValue","addLayer","id","source","paint","filter","slider","select","attr","length","stepFrame","oldFrame","newFrame","opacitySelectors","selector","setPaintProperty","tstamp","timeStr","unix","format","text","resize","panTo","mapCenterMoved","zoomFactor","setZoom","parseInt","remove"],"mappings":"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","file":"geoloop.js","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\r\nimport moment from 'moment';\r\nimport mapboxgl from './libs/mapbox-gl';\r\nimport * as d3 from './libs/d3';\r\n/* eslint-disable id-length, no-unused-vars */\r\n\r\nexport default class GeoLoop {\r\n  constructor(ctrl, mapContainer) {\r\n    this.ctrl = ctrl;\r\n    this.mapContainer = mapContainer;\r\n    this.createMap();\r\n    this.frames = []; // list of timestamps\r\n    this.currentFrameIndex = 0;\r\n    this.animation = {};\r\n  }\r\n\r\n  createMap() {\r\n    console.log('rebuilding map');\r\n    const mapCenterLonLat = [parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)];\r\n    mapboxgl.accessToken = this.ctrl.panel.mbApiKey;\r\n    this.map = new mapboxgl.Map({\r\n      container: this.mapContainer,\r\n      style: 'mapbox://styles/mapbox/' + this.ctrl.panel.mapStyle,\r\n      center: mapCenterLonLat,\r\n      zoom: parseFloat(this.ctrl.panel.initialZoom),\r\n      interactive: this.ctrl.panel.userInteractionEnabled\r\n    });\r\n  }\r\n\r\n  createLegend() {\r\n    this.legend = {};\r\n  }\r\n\r\n  needToRedrawFrames() {\r\n    this.legend = {};\r\n    return true;\r\n  }\r\n\r\n  drawLayerFrames() {\r\n    const data = this.ctrl.data;\r\n    if (this.needToRedrawFrames(data)) {\r\n      this.stopAnimation();\r\n      this.clearFrames();\r\n      this.createFrames(data);\r\n      this.startAnimation();\r\n    }\r\n  }\r\n\r\n  clearFrames() {\r\n    this.frames.forEach((item) => {\r\n      this.map.removeLayer('f-' + item);\r\n    });\r\n    this.frames = [];\r\n  }\r\n\r\n  createFrames() {\r\n    if (!this.ctrl.dataCharacteristics.timeValues) {\r\n      console.log('no series to display');\r\n      return;\r\n    }\r\n\r\n    if (!this.ctrl.geo) {\r\n      console.log('no geo data');\r\n      return;\r\n    }\r\n\r\n    if (this.map.isSourceLoaded('geo')) {\r\n      this.createFramesSafely();\r\n    } else {\r\n      // console.log('no geo source in map. maybe not loaded?');\r\n      // this is stupid to use setInterval.\r\n      // but mapbox doesn't seem to have a on-source-loaded event that reliably works\r\n      // for this purpose.\r\n      let attemptsLeft = 10;\r\n      const interval = setInterval(() => {\r\n        // console.log('waited for layer to load.');\r\n        if (this.map.isSourceLoaded('geo')) {\r\n          this.createFramesSafely();\r\n          clearInterval(interval);\r\n        } else {\r\n          console.log('still no geo source. try refresh manually?');\r\n          if (--attemptsLeft <= 0) {\r\n            clearInterval(interval);\r\n          }\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  createFramesSafely() {\r\n    const sizeIsDynamic = (this.ctrl.panel.sizeRamp.codeTo === 'measurement');\r\n    const colorIsDynamic = (this.ctrl.panel.colorRamp.codeTo === 'measurement');\r\n    const featureType = this.ctrl.panel.renderType;\r\n    const layerType = this.ctrl.opts.layerTypes[featureType];\r\n    let sizeStops = [[0, 1], [100, 10]];\r\n    const colorStops = [];\r\n\r\n    if (sizeIsDynamic) {\r\n      // populate the sizeStops array with the input/output values\r\n      let minInput = 0;\r\n      let maxInput = 1;\r\n      if (this.ctrl.panel.sizeRamp.auto) {\r\n        minInput = this.ctrl.dataCharacteristics.min;\r\n        maxInput = this.ctrl.dataCharacteristics.max;\r\n      } else {\r\n        minInput = parseFloat(this.ctrl.panel.sizeRamp.minValue);\r\n        maxInput = parseFloat(this.ctrl.panel.sizeRamp.maxValue);\r\n      }\r\n\r\n      sizeStops = [[minInput, parseFloat(this.ctrl.panel.sizeRamp.min)], [maxInput, parseFloat(this.ctrl.panel.sizeRamp.max)]];\r\n      // console.log('size stops: ', sizeStops);\r\n    }\r\n\r\n    if (colorIsDynamic) {\r\n      // populate the sizeStops array with the input/output values\r\n      let minInput = 0;\r\n      let maxInput = 1;\r\n      if (this.ctrl.panel.colorRamp.auto) {\r\n        minInput = this.ctrl.dataCharacteristics.min;\r\n        maxInput = this.ctrl.dataCharacteristics.max;\r\n      } else {\r\n        minInput = parseFloat(this.ctrl.panel.colorRamp.minValue);\r\n        maxInput = parseFloat(this.ctrl.panel.colorRamp.maxValue);\r\n      }\r\n\r\n      const nStops = 25;\r\n\r\n      for (let iStop = 0; iStop <= nStops; iStop += 1) {\r\n        const stop = minInput + ((iStop / nStops) * (maxInput - minInput));\r\n        colorStops.push([stop, this.ctrl.panel.colorInterpolator(stop)]);\r\n      }\r\n\r\n      // console.log('color stops: ', colorStops);\r\n    }\r\n\r\n    this.ctrl.dataCharacteristics.timeValues.forEach((time) => {\r\n      const frameName = 'f-' + time;\r\n      // create new map layer for this animation frame (name is the time code)\r\n      const pp = {}; // paint properties\r\n      let geoFilter = [];\r\n      if (featureType === 'line') {\r\n        geoFilter = ['==', '$type', 'LineString'];\r\n        pp['line-opacity'] = 0;\r\n        pp['line-opacity-transition'] = { duration: 0 };\r\n        pp['line-width'] = sizeIsDynamic ? {\r\n          property: frameName,\r\n          type: 'exponential',\r\n          stops: sizeStops\r\n        } : parseFloat(this.ctrl.panel.sizeRamp.fixedValue);\r\n        pp['line-color'] = colorIsDynamic ? {\r\n          property: frameName,\r\n          type: 'exponential',\r\n          stops: colorStops\r\n        } : parseFloat(this.ctrl.panel.colorRamp.fixedValue);\r\n      } else if (featureType === 'point') {\r\n        geoFilter = ['==', '$type', 'Point'];\r\n        pp['circle-opacity'] = 0;\r\n        pp['circle-opacity-transition'] = { duration: 0 };\r\n        pp['circle-radius'] = sizeIsDynamic ? {\r\n          property: frameName,\r\n          type: 'exponential',\r\n          stops: sizeStops\r\n        } : parseFloat(this.ctrl.panel.sizeRamp.fixedValue);\r\n        pp['circle-color'] = colorIsDynamic ? {\r\n          property: frameName,\r\n          type: 'exponential',\r\n          stops: colorStops\r\n        } : this.ctrl.panel.colorRamp.fixedValue;\r\n      } else if (featureType === 'polygon') {\r\n        geoFilter = ['==', '$type', 'Polygon'];\r\n        pp['fill-opacity'] = 0;\r\n        pp['fill-opacity-transition'] = { duration: 0 };\r\n        pp['fill-color'] = colorIsDynamic ? {\r\n          property: frameName,\r\n          type: 'exponential',\r\n          stops: colorStops\r\n        } : this.ctrl.panel.colorRamp.fixedValue;\r\n      }\r\n\r\n      this.map.addLayer({\r\n        id: 'f-' + time,\r\n        type: layerType,\r\n        source: 'geo',\r\n        paint: pp,\r\n        filter: geoFilter,\r\n      });\r\n\r\n      this.frames.push(time);\r\n    });\r\n\r\n    // get slider component, set min/max/value\r\n    const slider = d3.select('#map_' + this.ctrl.panel.id + '_slider')\r\n      .attr('min', 0)\r\n      .attr('max', this.frames.length);\r\n  }\r\n\r\n\r\n  startAnimation() {\r\n    if (this.animation) {\r\n      this.stopAnimation();\r\n    }\r\n\r\n    this.animation = setInterval(() => {\r\n      this.stepFrame();\r\n    }, 200);\r\n  }\r\n\r\n  stopAnimation() {\r\n    clearInterval(this.animation);\r\n    this.animation = null;\r\n  }\r\n\r\n  stepFrame() {\r\n    if (!this.map) {\r\n      return;\r\n    }\r\n    if (this.frames.length === 0) {\r\n      // console.log('skipping animation: no frames');\r\n      return;\r\n    }\r\n    const oldFrame = 'f-' + this.frames[this.currentFrameIndex];\r\n    this.currentFrameIndex += 1;\r\n    if (this.currentFrameIndex >= this.frames.length) {\r\n      this.currentFrameIndex = 0;\r\n    }\r\n    const newFrame = 'f-' + this.frames[this.currentFrameIndex];\r\n\r\n    const opacitySelectors = {\r\n      'point': 'circle-opacity',\r\n      'polygon': 'fill-opacity',\r\n      'line': 'line-opacity'\r\n    };\r\n    const selector = opacitySelectors[this.ctrl.panel.renderType];\r\n\r\n    this.map.setPaintProperty(newFrame, selector, 1);\r\n    this.map.setPaintProperty(oldFrame, selector, 0);\r\n    const tstamp = this.frames[this.currentFrameIndex] / 1e3;\r\n    const timeStr = moment.unix(tstamp).format('YYYY-MM-DD HH:mm:ss');\r\n    // console.log('time is ', timeStr);\r\n\r\n    // set time string in legend\r\n    d3.select('#map_' + this.ctrl.panel.id + '_date').text(timeStr);\r\n    // set slider position to indicate time-location\r\n    d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value', this.currentFrameIndex);\r\n  }\r\n\r\n  resize() {\r\n    this.map.resize();\r\n  }\r\n\r\n  panToMapCenter() {\r\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)]);\r\n    this.ctrl.mapCenterMoved = false;\r\n  }\r\n\r\n  setZoom(zoomFactor) {\r\n    this.map.setZoom(parseInt(zoomFactor, 10));\r\n  }\r\n\r\n  remove() {\r\n    if (this.map) {\r\n      this.map.remove();\r\n    }\r\n    this.map = null;\r\n  }\r\n}\r\n"]}