{"version":3,"sources":["../src/geoloop_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","kbn","contextSrv","_","d3","csscolorparser","mapRenderer","DataFormatter","panelDefaults","mbApiKey","mapStyle","mapCenterLatitude","mapCenterLongitude","initialZoom","userInteractionEnabled","animationSpeed","animationPause","hideFeaturesWithNoData","geoIdTag","geoIdPath","geo","location","contents","callback","renderType","sizeRamp","codeTo","fixedValue","measurement","auto","min","max","minValue","maxValue","showLegend","legendPosition","colorRamp","scaleName","opacity","GeoLoopCtrl","$scope","$injector","console","log","dataCharacteristics","opts","renderTypes","colorRamps","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","mapStyles","featureTypes","layerTypes","defaults","panel","setMapProviderOpts","dataFormatter","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","loadGeo","lonLatStr","Object","keys","center","map","getCenter","lng","lat","coords","split","strVal","Number","trim","mapCenterMoved","render","remove","hardRefresh","updateRamp","user","lightTheme","saturationClass","stopAnimation","clearFrames","setStyle","updateGeoDataFeatures","reload","snapshotLocationData","window","$","ajax","type","url","contentType","jsonpCallback","dataType","success","res","fail","addEditorTab","dataList","dashboard","snapshot","series","seriesHandler","getCharacteristics","snapshotData","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","features","getSource","removeSource","timeValues","forEach","tv","feature","fname","properties","keyedSeries","geoKeySearch","reStr","reg","RegExp","matches","match","length","featureIdsWithData","featureId","reduce","obj","key","point","time","val","push","result","filteredFeatures","filter","findIndex","entry","assign","addSource","data","dc","colorInterpolator","inputRange","theRamp","scaleSequential","domain","interpolator","value","scaleColor","color","parseCSSColor","clamp","defaultTo","sizeInterpolator","px","py","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"geoloop_ctrl.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: 0 */\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {contextSrv} from 'app/core/core';\r\n\r\nimport _ from 'lodash';\r\nimport * as d3 from './libs/d3';\r\nimport csscolorparser from './libs/csscolorparser';\r\nimport mapRenderer from './map_renderer';\r\nimport DataFormatter from './data_formatter';\r\nimport './css/geoloop-panel.css!';\r\n\r\nconst panelDefaults = {\r\n  mbApiKey: 'pk.eyXXXXXXX',\r\n  mapStyle: 'streets-v10', // see opts below\r\n  mapCenterLatitude: 0,\r\n  mapCenterLongitude: 0,\r\n  initialZoom: 8,\r\n  userInteractionEnabled: true,\r\n  animationSpeed: 1, // # of seconds animation time per day of data\r\n  animationPause: 500, // millisecond pause at end of animation loop\r\n  hideFeaturesWithNoData: true,\r\n  geoIdTag: 'geo_id',\r\n  geoIdPath: 'id',\r\n  geo: {\r\n    location: 'url', // one of: url, text\r\n    contents: 'xxxxxx', // either the jsonp url or the json text itself\r\n    callback: 'data' // named callback in jsonp contents\r\n  },\r\n  renderType: 'line', // one of: line,point,polygon\r\n  sizeRamp: {\r\n    codeTo: 'fixed', // or 'measurement'\r\n    fixedValue: 5,\r\n    measurement: 'measurement_name',\r\n    auto: false,\r\n    min: 1,\r\n    max: 10,\r\n    minValue: 0,\r\n    maxValue: 100,\r\n    showLegend: true,\r\n    legendPosition: 'l'\r\n  },\r\n  colorRamp: {\r\n    codeTo: 'fixed', // or 'measurement'\r\n    fixedValue: '#0000ff',\r\n    measurement: 'measurement_name',\r\n    auto: false,\r\n    minValue: 1,\r\n    maxValue: 100,\r\n    scaleName: 'viridis', // one of D3's color ramps\r\n    showLegend: true,\r\n    legendPosition: 'l',\r\n    opacity: 0.5\r\n  },\r\n};\r\n\r\nexport default class GeoLoopCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    console.log('initializing geoloop control');\r\n\r\n    this.dataCharacteristics = {};\r\n\r\n    this.opts = {\r\n      renderTypes: ['line', 'point', 'polygon'],\r\n      colorRamps: { /*\r\n      for some reason, the extra d3-scale-chromatic library is hard to import ??\r\n        'BrBG': scale.interpolateBrBG,\r\n        'PRGn': scale.interpolatePRGn,\r\n        'PiYG': scale.interpolatePiYG,\r\n        'PuOr': scale.interpolatePuOr,\r\n        'RdBu': scale.interpolateRdBu,\r\n        'RdGy': scale.interpolateRdGy,\r\n        'RdYlBu': scale.interpolateRdYlBu,\r\n        'RdYlGn': scale.interpolateRdYlGn,\r\n        'Spectral': scale.interpolateSpectral,\r\n        'Blues': scale.interpolateBlues,\r\n        'Greens': scale.interpolateGreens,\r\n        'Greys': scale.interpolateGreys,\r\n        'Oranges': scale.interpolateOranges,\r\n        'Purples': scale.interpolatePurples,\r\n        'Reds': scale.interpolateReds,\r\n        'BuGn': scale.interpolateBuGn,\r\n        'BuPu': scale.interpolateBuPu,\r\n        'GnBu': scale.interpolateGnBu,\r\n        'OrRd': scale.interpolateOrRd,\r\n        'PuBuGn': scale.interpolatePuBuGn,\r\n        'PuBu': scale.interpolatePuBu,\r\n        'PuRd': scale.interpolatePuRd,\r\n        'RdPu': scale.interpolateRdPu,\r\n        'YlGnBu': scale.interpolateYlGnBu,\r\n        'YlGn': scale.interpolateYlGn,\r\n        'YlOrBr': scale.interpolateYlOrBr,\r\n        'YlOrRd': scale.interpolateYlOrRd */\r\n        'cubehelix': d3.interpolateCubehelixDefault,\r\n        'rainbow': d3.interpolateRainbow,\r\n        'warm': d3.interpolateWarm,\r\n        'cool': d3.interpolateCool,\r\n        'viridis': d3.interpolateViridis,\r\n        'magma': d3.interpolateMagma,\r\n        'inferno': d3.interpolateInferno,\r\n        'plasma': d3.interpolatePlasma\r\n      },\r\n      mapStyles: {\r\n        'streets': 'streets-v10',\r\n        'outdoors': 'outdoors-v10',\r\n        'light': 'light-v9',\r\n        'dark': 'dark-v9',\r\n        'satellite': 'satellite-v9',\r\n        'satellite-streets': 'satellite-streets-v10',\r\n        'traffic': 'traffic-day-v2',\r\n        'traffic-night': 'traffic-night-v2'\r\n      },\r\n      featureTypes: {\r\n        'Point': 'point',\r\n        'Line': 'line',\r\n        'Polygon': 'polygon'\r\n      },\r\n      layerTypes: {\r\n        'point': 'circle',\r\n        'polygon': 'fill',\r\n        'line': 'line'\r\n      }\r\n    };\r\n    /* set defaults: */\r\n    _.defaults(this.panel, panelDefaults);\r\n    _.defaults(this.panel, panelDefaults.colorRamp);\r\n    _.defaults(this.panel, panelDefaults.sizeRamp);\r\n    _.defaults(this.panel, panelDefaults.geo);\r\n\r\n    this.setMapProviderOpts();\r\n\r\n    this.dataFormatter = new DataFormatter(this, kbn);\r\n\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\r\n\r\n    console.log('control constructor loading geo:');\r\n    this.loadGeo(true);\r\n    this.lonLatStr = this.panel.mapCenterLongitude + ',' + this.panel.mapCenterLatitude;\r\n\r\n    // $scope.$root.onAppEvent('show-dash-editor', this.doMapResize());\r\n    // $scope.$root.onAppEvent('hide-dash-editor', this.doMapResize());\r\n  }\r\n\r\n  getColorScaleImgUrl() {\r\n    return '/public/plugins/citilogics-geoloop-panel/images/colorRamps/' + this.panel.colorRamp.scaleName + '.png';\r\n  }\r\n  getColorNames() {\r\n    return Object.keys(this.opts.colorRamps);\r\n  }\r\n\r\n  setLocationFromMap() {\r\n    const center = this.map.map.getCenter();\r\n    this.panel.mapCenterLongitude = center.lng;\r\n    this.panel.mapCenterLatitude = center.lat;\r\n    this.lonLatStr = this.panel.mapCenterLongitude + ',' + this.panel.mapCenterLatitude;\r\n  }\r\n\r\n  setNewMapCenter() {\r\n    const coords = this.lonLatStr.split(',').map((strVal) => {\r\n      return Number(strVal.trim());\r\n    });\r\n    this.panel.mapCenterLongitude = coords[0];\r\n    this.panel.mapCenterLatitude = coords[1];\r\n\r\n    this.mapCenterMoved = true;\r\n    this.render();\r\n  }\r\n\r\n  hardResetMap() {\r\n    if (this.map) {\r\n      this.map.remove();\r\n    }\r\n    this.map = null;\r\n    this.render();\r\n    this.hardRefresh();\r\n  }\r\n\r\n  hardRefresh() {\r\n    this.updateRamp();\r\n    this.loadGeo(true);\r\n  }\r\n\r\n  setMapProviderOpts() {\r\n    if (contextSrv.user.lightTheme) {\r\n      this.saturationClass = '';\r\n    } else {\r\n      this.saturationClass = 'map-darken';\r\n    }\r\n\r\n    if (this.map) {\r\n      this.map.stopAnimation();\r\n      this.map.clearFrames();\r\n      this.map.map.setStyle('mapbox://styles/mapbox/' + this.panel.mapStyle).on('style.load', () => {\r\n        this.updateGeoDataFeatures();\r\n        this.render();\r\n      });\r\n    }\r\n  }\r\n\r\n  loadGeo(reload) {\r\n    if (this.map && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.panel.snapshotLocationData) {\r\n      this.geo = this.panel.snapshotLocationData;\r\n      return;\r\n    }\r\n\r\n    if (this.panel.geo.location === 'url') {\r\n      if (!this.panel.geo.contents) {\r\n        return;\r\n      }\r\n      window.$.ajax({\r\n        type: 'GET',\r\n        url: this.panel.geo.contents + '?callback=?',\r\n        contentType: 'application/json',\r\n        jsonpCallback: this.panel.geo.callback,\r\n        dataType: 'jsonp',\r\n        success: (res) => {\r\n          console.log('downloaded geojson');\r\n          this.geo = res;\r\n          this.updateGeoDataFeatures();\r\n          this.render();\r\n        }\r\n      }).fail((res) => {\r\n        console.log('error in ajax: ', res);\r\n        this.geo = null;\r\n        this.render();\r\n      });\r\n    } else if (this.panel.geo.location === 'text') {\r\n      // nothing\r\n    }\r\n  }\r\n\r\n  onPanelTeardown() {\r\n    if (this.map) this.map.remove();\r\n  }\r\n\r\n  onInitEditMode() {\r\n    console.log('init edit mode');\r\n    this.addEditorTab('GeoLoop', 'public/plugins/citilogics-geoloop-panel/partials/editor.html');\r\n  }\r\n\r\n  onDataReceived(dataList) {\r\n    // console.log('ctrl recieved data: ', dataList);\r\n    if (!dataList) return;\r\n\r\n    if (this.dashboard.snapshot && this.geo) {\r\n      this.panel.snapshotLocationData = this.geo;\r\n    }\r\n\r\n    this.series = dataList.map(this.seriesHandler.bind(this));\r\n    // console.log('series: ', this.series);\r\n    this.dataCharacteristics = this.dataFormatter.getCharacteristics();\r\n    this.updateRamp();\r\n    this.updateGeoDataFeatures();\r\n    this.render();\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  seriesHandler(seriesData) {\r\n    const series = new TimeSeries({\r\n      datapoints: seriesData.datapoints,\r\n      alias: seriesData.target,\r\n    });\r\n\r\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n    return series;\r\n  }\r\n\r\n  setZoom() {\r\n    this.map.setZoom(this.panel.initialZoom || 1);\r\n  }\r\n\r\n  toggleLegend() {\r\n    this.render();\r\n  }\r\n\r\n  updateGeoDataFeatures() {\r\n    console.log('updating geo features');\r\n    if (!this.geo || !this.geo.features) {\r\n      console.log('no geo or no features');\r\n      return;\r\n    }\r\n    if (this.map && this.map.map.getSource('geo')) {\r\n      // console.log('geojson source found. removing...');\r\n      this.map.map.removeSource('geo');\r\n    }\r\n    if (!this.dataCharacteristics || !this.dataCharacteristics.timeValues) {\r\n      console.log('no data yet...');\r\n      return;\r\n    }\r\n    // clear timeseries data from geojson data\r\n    this.dataCharacteristics.timeValues.forEach((tv) => {\r\n      this.geo.features.forEach((feature) => {\r\n        const fname = 'f-' + tv;\r\n        if (feature.properties && feature.properties[fname]) {\r\n          delete feature.properties[fname];\r\n        }\r\n      });\r\n    });\r\n\r\n\r\n    // organize the series data - using the \"tag\" user has selected for correspondence with feature.id:\r\n    const keyedSeries = {};\r\n    const geoKeySearch = this.panel.geoIdTag + ':';\r\n    const reStr = geoKeySearch + ' ([^,}]+)';\r\n    const reg = new RegExp(reStr);\r\n    this.series.forEach((series) => {\r\n      // expect series.alias to be of the form --> \"measure.aggregator {tagKey: tagVal, tagKey: tagVal}\"\r\n      const matches = series.alias.match(reg);\r\n      // console.log('matches: ', matches);\r\n      if (matches && matches.length > 1) {\r\n        keyedSeries[matches[1]] = series;\r\n      }\r\n    });\r\n\r\n    // console.log('features: ', this.geo.features);\r\n    // console.log('keyed series: ', keyedSeries);\r\n\r\n    // put data into features.\r\n    const featureIdsWithData = [];\r\n    this.geo.features.forEach((feature) => {\r\n      if (!feature.properties) {\r\n        feature.properties = {};\r\n      }\r\n      // this funny business below deserializes the dot-notation path name and resolves the feature id\r\n      // the user has specified.\r\n      const featureId = this.panel.geoIdPath.split('.').reduce((obj, key) => obj[key], feature);\r\n      if (featureId in keyedSeries) {\r\n        const series = keyedSeries[featureId];\r\n        series.datapoints.forEach((point) => {\r\n          const time = point[1];\r\n          const val = point[0];\r\n          feature.properties['f-' + time] = val;\r\n        });\r\n        featureIdsWithData.push(featureId);\r\n      }\r\n    });\r\n\r\n\r\n    let result = this.geo;\r\n    if (this.panel.hideFeaturesWithNoData) {\r\n      // Create array of features only containing features with data.\r\n      const filteredFeatures = this.geo.features.filter((feature) => {\r\n        const featureId = this.panel.geoIdPath.split('.').reduce((obj, key) => obj[key], feature);\r\n        return featureIdsWithData.findIndex(entry => entry === featureId) >= 0;\r\n      });\r\n\r\n      // Create copy of geo object but with the filtered subset of features.\r\n      result = Object.assign({}, this.geo);\r\n      result.features = filteredFeatures;\r\n    }\r\n\r\n    if (result && this.map) {\r\n      console.log('adding geojson source...');\r\n      this.map.map.addSource('geo', {\r\n        type: 'geojson',\r\n        data: result\r\n      });\r\n    } else {\r\n      console.log('not adding source because no map');\r\n    }\r\n  }\r\n\r\n\r\n  updateRamp() { // dc :: data characteristics (dc{timeValues, min, max})\r\n    const dc = this.dataCharacteristics;\r\n    let colorInterpolator;\r\n    if (this.panel.colorRamp.codeTo === 'fixed') {\r\n      colorInterpolator = () => this.panel.colorRamp.fixedValue;\r\n    } else {\r\n      const inputRange = this.panel.colorRamp.auto ? [dc.min, dc.max] : [this.panel.colorRamp.minValue, this.panel.colorRamp.maxValue];\r\n      const theRamp = this.opts.colorRamps[this.panel.colorRamp.scaleName];\r\n      // console.log('color ramp name: ', this.panel.colorRamp.scaleName);\r\n      // console.log('color ramp: ', theRamp);\r\n      colorInterpolator = d3.scaleSequential().domain(inputRange).interpolator(theRamp);\r\n    }\r\n\r\n    this.panel.colorInterpolator = (value) => {\r\n      const scaleColor = colorInterpolator(value);\r\n      const color = csscolorparser.parseCSSColor(scaleColor);\r\n      const opacity = _.clamp(_.defaultTo(this.panel.colorRamp.opacity, 0.5), 0.0, 1.0);\r\n      return 'rgba(' + color[0] + ',' + color[1] + ',' + color[2] + ',' + opacity + ')';\r\n    };\r\n\r\n    if (this.panel.sizeRamp.codeTo === 'fixed') {\r\n      this.panel.sizeInterpolator = () => { return this.panel.sizeRamp.fixedValue; };\r\n    } else {\r\n      const px = this.panel.sizeRamp.auto ? [dc.min, dc.max] : [this.panel.sizeRamp.minValue, this.panel.sizeRamp.maxValue];\r\n      const py = [this.panel.sizeRamp.min, this.panel.sizeRamp.max];\r\n      this.panel.sizeInterpolator = (val) => { return py[0] + (((val - px[0]) * (py[1] - py[0])) / (px[1] - px[0])); };\r\n    }\r\n  }\r\n\r\n\r\n/* eslint class-methods-use-this: 0 */\r\n  link(scope, elem, attrs, ctrl) {\r\n    mapRenderer(scope, elem, attrs, ctrl);\r\n  }\r\n\r\n}\r\n\r\nGeoLoopCtrl.templateUrl = 'module.html';\r\n"]}